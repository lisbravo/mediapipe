syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";

// Full Example:
//
// node {
//   calculator: "anglesToTfLiteConverterCalculator"
//   input_stream: "ANGLES:angles"
//   output_stream: "TENSORS:angle_tensor"
//   options: {
//     [mediapipe.anglesToTfLiteConverterCalculatorOptions.ext] {
//       zero_center: true
//     }
//   }
// }

message anglesToTfLiteConverterCalculatorOptions {
  extend mediapipe.CalculatorOptions {
    optional anglesToTfLiteConverterCalculatorOptions ext = 245827798;
  }

  // Choose normalization mode for output (not applied for Matrix inputs).
  // true = [-1,1]
  // false = [0,1]
  // Ignored if using quantization.
  optional bool zero_center = 1 [default = true];

  // The calculator expects Matrix inputs to be in column-major order. Set
  // row_major_matrix to true if the inputs are in row-major order.
  optional bool row_major_matrix = 2 [default = false];

  // Quantization option (CPU only).
  // When true, output kTfLiteUInt8 tensor instead of kTfLiteFloat32.
  optional bool use_quantized_tensors = 3 [default = false];
}
